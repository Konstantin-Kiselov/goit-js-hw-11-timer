{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","intervalId","element","document","querySelector","start","setInterval","startTime","Date","now","deltaTime","time","getTimeComponents","showDate","stop","clearInterval","days","pad","Math","floor","hours","mins","secs","value","String","padStart","textContent","timerSummer","console","log","timerNY"],"mappings":";;;AAqFA,aArFA,QAAA,oBAEA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBC,KAAAA,WAAa,KACbC,KAAAA,QAAUC,SAASC,cAAcL,GACjCC,KAAAA,WAAaA,EAEbK,KAAAA,QAGPA,QACOJ,KAAAA,WAAaK,YAAY,KACtBC,MAAAA,EAAYC,KAAKC,MACjBC,EAAY,KAAKV,WAAaO,EAC9BI,EAAO,KAAKC,kBAAkBF,GAE/BG,KAAAA,SAASF,IAGb,KAGLG,OACEC,cAAc,KAAKd,YAIrBW,kBAAkBD,GA0BT,MAAA,CAAEK,KArBI,KAAKC,IAAIC,KAAKC,MAAMR,EAAQ,QAqB1BS,MAdD,KAAKH,IAAIC,KAAKC,MAAOR,EAAQ,MAAyB,OAc9CU,KART,KAAKJ,IAAIC,KAAKC,MAAOR,EAAQ,KAAoB,MAQlCW,KAFf,KAAKL,IAAIC,KAAKC,MAAOR,EAAQ,IAAc,OAM1DM,IAAIM,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAInCZ,UAAS,KAAEG,EAAF,MAAQI,EAAR,KAAeC,EAAf,KAAqBC,IACvBpB,KAAAA,QAAQE,cAAc,yBAAyBsB,YAAcV,EAC7Dd,KAAAA,QAAQE,cAAc,0BAA0BsB,YAAcN,EAC9DlB,KAAAA,QAAQE,cAAc,yBAAyBsB,YAAcL,EAC7DnB,KAAAA,QAAQE,cAAc,yBAAyBsB,YAAcJ,GAKtE,MAAMK,EAAc,IAAI9B,EAAe,CACrCE,SAAU,WACVC,WAAY,IAAIQ,KAAK,2BAGvBoB,QAAQC,IAAIF,GAGZ,MAAMG,EAAU,IAAIjC,EAAe,CACjCE,SAAU,WACVC,WAAY,IAAIQ,KAAK,2BAGvBoB,QAAQC,IAAIC","file":"src.a3c626db.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.intervalId = null;\n    this.element = document.querySelector(selector);\n    this.targetDate = targetDate;\n\n    this.start();\n  }\n\n  start() {\n    this.intervalId = setInterval(() => {\n      const startTime = Date.now();\n      const deltaTime = this.targetDate - startTime;\n      const time = this.getTimeComponents(deltaTime);\n\n      this.showDate(time);\n      // console.log(timeComponents);\n      // console.log(`${time.days}:${time.hours}:${time.mins}:${time.secs}`);\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(this.intervalId);\n  }\n\n  /* Формулы для получения значений с миллисекунд в дни:часы:минуты:секунды */\n  getTimeComponents(time) {\n    /*\n     * Оставшиеся дни: делим значение UTC на 1000 * 60 * 60 * 24, количество\n     * миллисекунд в одном дне (миллисекунды * секунды * минуты * часы)\n     */\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n\n    /*\n     * Оставшиеся часы: получаем остаток от предыдущего расчета с помощью оператора\n     * остатка % и делим его на количество миллисекунд в одном часе\n     * (1000 * 60 * 60 = миллисекунды * минуты * секунды)\n     */\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n\n    /*\n     * Оставшиеся минуты: получаем оставшиеся минуты и делим их на количество\n     * миллисекунд в одной минуте (1000 * 60 = миллисекунды * секунды)\n     */\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n\n    /*\n     * Оставшиеся секунды: получаем оставшиеся секунды и делим их на количество\n     * миллисекунд в одной секунде (1000)\n     */\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n\n  /* Принимает число, приводит к строке и добавляет 0, если число меньше 2-х знаков*/\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  /* Обновляем данные в index.html { days, hours, mins, secs } */\n  showDate({ days, hours, mins, secs }) {\n    this.element.querySelector('[data-value = \"days\"]').textContent = days;\n    this.element.querySelector('[data-value = \"hours\"]').textContent = hours;\n    this.element.querySelector('[data-value = \"mins\"]').textContent = mins;\n    this.element.querySelector('[data-value = \"secs\"]').textContent = secs;\n  }\n}\n\n/* Создаем экземпляр класса CountdownTimer */\nconst timerSummer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Sep 01, 2021 00:00:00'),\n});\n\nconsole.log(timerSummer);\n\n/* Создаем экземпляр класса CountdownTimer */\nconst timerNY = new CountdownTimer({\n  selector: '#timer-2',\n  targetDate: new Date('Dec 31, 2021 23:59:59'),\n});\n\nconsole.log(timerNY);\n"]}